apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    jcenter()

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation project(':app')
    implementation ('com.google.firebase:firebase-core:16.0.6'){
        transitive = true
    }
    implementation ('com.google.firebase:firebase-auth:16.1.0'){
        transitive = true
    }
    implementation ('com.google.firebase:firebase-storage:16.0.5'){
        transitive = true
    }
    implementation ('com.google.firebase:firebase-firestore:17.1.5'){
        transitive = true
    }
    implementation ('com.google.firebase:firebase-messaging:17.3.4'){
        transitive = true
    }
    implementation ('com.google.firebase:firebase-config:16.1.3'){
        transitive = true
    }
    implementation ('com.google.firebase:firebase-ads:17.1.2'){
        transitive = true
    }
    implementation ('com.google.firebase:firebase-dynamic-links:16.1.5'){
        transitive = true
    }

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }

    implementation ('ca.fuzzlesoft:json-parse:1.3.4'){
        transitive = true
    }
    implementation ('ca.fuzzlesoft:json-compose:1.0.3'){
        transitive = true
    }

    implementation ('com.facebook.android:facebook-login:4.39.0'){
        transitive = true
    }

    implementation ('com.facebook.android:audience-network-sdk:5.0.1'){
        transitive = true
    }

    implementation ('com.unity:unity-ads:1.0.0@aar'){
        transitive = true
    }

    implementation ('com.appsflyer:af-android-sdk:4.8.11@aar'){
        transitive = true
    }

    implementation ('com.karumi:dexter:5.0.0'){
        transitive = true
    }

    implementation ('com.android.installreferrer:installreferrer:1.0'){
        transitive = true
    }

    implementation ('com.github.vungle:vungle-android-sdk:6.3.17'){
        transitive = true
    }

    implementation ('com.facebook.android:facebook-share:4.39.0'){
        transitive = true
    }

    implementation ('com.bytedance.sdk:open_ad_sdk:1.9.8.6@aar'){
        transitive = true
    }

    implementation ('pl.droidsonroids.gif:android-gif-drawable:1.2.6'){
        transitive = true
    }
    implementation ('com.bytedance.sdk:android-query-full:0.26.7'){
        transitive = true
    }

    implementation ('com.gdt:GDTUnionSDK:4.22.584'){
        transitive = true
    }

    implementation ('com.mintegral:mintegral_alphab:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_chinacommon:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_interactiveads:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_interstitial:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_interstitialvideo:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_mtgdownloads:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_mtgjscommon:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_mtgnative:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_nativeex:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_playercommon:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_reward:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_videocommon:9.6.0@aar'){
        transitive = true
    }
    implementation ('com.mintegral:mintegral_videojs:9.6.0@aar'){
        transitive = true
    }

    implementation  ('com.umeng.umsdk:game:8.0.0+G'){
        transitive = true
    }

    implementation  ('com.umeng.umsdk:common:2.0.0'){
        transitive = true
    }

}

def isReleaseBuild() {
    return CH_VERSION_NAME.toUpperCase().contains("SNAPSHOT") == false
}
def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}
def getRepositoryUrl() {
    return isReleaseBuild() ? RELEASE_REPOSITORY_URL : SNAPSHOT_REPOSITORY_URL
}
afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                //pom.packaging = 'aar'
                pom.groupId = GROUP
                pom.artifactId = CH_POM_ARTIFACT_ID
                pom.version = CH_VERSION_NAME
                repository(url: getRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
            }
        }
    }
    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    //解决 JavaDoc 中文注释生成失败的问题
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }
    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}